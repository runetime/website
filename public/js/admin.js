var leaderPanel,LeaderPanel=function(){function a(){this.elements={},this.hooks={},this.paths={},this.elements={ban:{username:"[rt-hook='leader.panel:ban.username']",reason:"[rt-hook='leader.panel:ban.reason']"},modals:{ban:"#modal-temp-ban-user",chatbox:"#modal-clear-chatbox",demote:"#modal-demote-member",mute:"#modal-mute-user"},mute:{reason:"#mute-reason",time:"#mute-time",username:"#mute-username"},results:{good:"#modal-results-good",goodMessage:"[rt-hook='leader.panel:results.good.message']",bad:"#modal-results-bad",badMessage:"[rt-hook='leader.panel:results.bad.message']"}},this.hooks={chatbox:{reason:"#chatbox-clear-reason",confirm:"[rt-hook='leader.panel:chatbox.clear']"},demote:{data:"[rt-hook='leader.panel:demote.data']"},mute:{submit:"[rt-hook='leader.panel:mute.submit']"},ban:{submit:"[rt-hook='leader.panel:ban.submit']"}},this.paths={chatboxClear:"/staff/leader/clear-chatbox",demote:"/staff/leader/demote",mute:"/staff/leader/mute",tempBan:"/staff/leader/temp-ban"},this.setup()}return a.prototype.chatboxClear=function(){var a=$(this.hooks.chatbox.reason).val();if(a.length<1)this.error("No reason was given.");else{var b={reason:a},c=utilities.postAJAX(this.paths.chatboxClear,b);c.done(function(a){a=$.parseJSON(a),a.done===!0?leaderPanel.done("The chatbox has been successfully cleared."):leaderPanel.error(-1===a.error?"There was an unknown error while setting all chat messages to invisible.":"There was an unknown error while clearing the chatbox.")})}},a.prototype.demote=function(a){var b=$(a.target).attr("rt-data"),c={id:b},d=utilities.postAJAX(this.paths.demote,c);d.done(function(a){a=$.parseJSON(a),leaderPanel.done(a.done===!0?"The user "+a.name+" was successfully demoted.":-1===a.error?"You are not a team leader and can not demote members.":-2===a.error?"That user is not in your team.":"There was unknown error.")})},a.prototype.done=function(a){$.each(this.elements.modals,function(a,b){$(b).modal("hide")}),$(this.elements.results.good).modal("show"),$(this.elements.results.goodMessage).html(a)},a.prototype.error=function(a){$.each(this.elements.modals,function(a,b){$(b).modal("hide")}),$(this.elements.results.bad).modal("show"),$(this.elements.results.badMessage).html(a)},a.prototype.mute=function(){var a=$(this.elements.mute.username).val(),b=$(this.elements.mute.time).val(),c=$(this.elements.mute.reason).val();if(a.length>0&&b.length>0&&c.length>0){var d={username:a,time:b,reason:c},e=utilities.postAJAX(this.paths.mute,d);e.done(function(a){a=$.parseJSON(a),a.done===!0?leaderPanel.done("The user "+a.name+" has been successfully muted."):leaderPanel.error(-1===a.error?"That user does not exist.":-2===a.error?"There was an unknown error while muting that user.":-3===a.error?"You did not write a 'infinite' but did not write a number either.":"There was an unknown error while muting that user.")})}else leaderPanel.error("All of the fields need to be completed.")},a.prototype.setup=function(){$(this.hooks.chatbox.confirm).click(function(){leaderPanel.chatboxClear()}),$(this.hooks.demote.data).click(function(a){leaderPanel.demote(a)}),$(this.hooks.mute.submit).click(function(){leaderPanel.mute()}),$(this.hooks.ban.submit).click(function(){leaderPanel.ban()})},a}(),Admin=function(){function a(){this.radio=null}return a}(),AdminRadio=function(){function a(){this.live=null,this.timetable=null}return a}(),AdminTimetable=function(){function a(){this.paths={},this.paths={claim:"/staff/radio/timetable"},$("[rt-data='radio.panel.timetable:update.hour']").bind("click",function(a){admin.radio.timetable.claim(a)})}return a.prototype.claim=function(a){alert(1);var b=$(a.target).attr("rt-data2"),c=b.split(":"),d=c[0],e=b[1],f={day:d,hour:e},g=utilities.PostAJAX(this.paths.claim,f);g.done(function(a){a=$.parseJSON(a),a.valid===!0&&$("[rt-data2='"+a.day+":"+a.hour+"']").html(a.name)})},a}(),AdminLive=function(){function a(){this.elements={},this.paths={},this.elements={song:"[rt-data='radio.panel:current.song']",songName:"[rt-data='radio.panel:current.song.name']",songArtist:"[rt-data='radio.panel:current.song.artist']",currentMessage:"[rt-data='radio.panel:current.message']",requests:"[rt-data='radio.panel:requests']"},this.paths={message:"/staff/radio/live/message",update:"/staff/radio/live/update"},this.update(),$("[rt-data='radio.panel:message.update']").bind("click",function(a){admin.radio.live.updateMessage($(a.target).attr("rt-data2"))})}return a.prototype.update=function(){var a=utilities.getAJAX(this.paths.update);a.done(function(a){a=$.parseJSON(a),$(admin.radio.live.elements.songName).html(a.song.name),$(admin.radio.live.elements.songArtist).html(a.song.artist),$(admin.radio.live.elements.currentMessage).html(a.song.message)}),setTimeout(function(){admin.radio.live.update()},3e4)},a.prototype.updateMessage=function(a){var b={id:a},c=utilities.postAJAX(this.paths.message,b);c.done(function(a){a=$.parseJSON(a),$(admin.radio.live.elements.currentMessage).html(a.message)})},a}(),admin=new Admin,staffPanel,StaffPanel=function(){function a(){this.hooks={},this.paths={},this.hooks={mute:{username:"#mute-username",reason:"#mute-contents",send:"[rt-hook='staff.panel:mute.send']"},report:{username:"#report-username",reason:"#report-contents",send:"[rt-hook='staff.panel:report.send']"},results:{good:"[rt-hook='staff.panel:results.good.message']",bad:"[rt-hook='staff.panel:results.bad.message']"}},this.paths={mute:"/staff/mute",report:"/staff/report"},$(this.hooks.mute.send).click(function(){staffPanel.sendMute()}),$(this.hooks.report.send).click(function(){staffPanel.sendReport()}),this.setup()}return a.prototype.error=function(){$(staffPanel.hooks.results.bad).html(-1===results.error?"That user does not exist.":-2===results.error?"There was an error with processing the report.":"There was an unknown error."),$("#modal-results-bad").modal("show")},a.prototype.sendMute=function(){var a={username:$(this.hooks.mute.username).val(),contents:$(this.hooks.mute.reason).val()},b=utilities.postAJAX(this.paths.mute,a);b.done(function(a){a=$.parseJSON(a),$("#modal-mute-user").modal("hide"),a.done===!0?$("#modal-results-good").modal("show"):staffPanel.error(a.error)})},a.prototype.sendReport=function(){var a={username:$(this.hooks.report.username).val(),contents:$(this.hooks.report.reason).val()},b=utilities.postAJAX(this.paths.report,a);b.done(function(a){a=$.parseJSON(a),$("#modal-report-user").modal("hide"),a.done===!0?$("#modal-results-good").modal("show"):staffPanel.error(a.error)})},a.prototype.setup=function(){var a=$(".pretty-row > div"),b=$(a).size();for(i=1;b>=i;i+=2){var c=$(".pretty-row div:nth-child("+i+")"),d=$(".pretty-row div:nth-child("+(i+1)+")"),e=Math.max($(c).height(),$(d).height());$(c).height(e),$(d).height(e)}if(b%2==0){var c=$(".pretty-row div:nth-child("+(b-1)+")"),d=$(".pretty-row div:nth-child("+b+")");$(c).css({"padding-bottom":0}),$(d).css({"padding-bottom":0})}else{var c=$(".pretty-row div:nth-child("+b+")");$(c).css({"padding-bottom":0})}},a}();